@top Program { expression }

@skip { space | LineComment }


@precedence {
  LineComment,
  times @left,
  divide @left,
  pow @left,
  plus @left,
  assign @right
}

expression {
  VariableName |
  Number |
  BinaryExpression |
  ParenthesizedExpression |
  AssignmentExpression
}

ParenthesizedExpression { "(" expression ")" }

BinaryExpression {
  expression !times (divide | ArithOp<"%"> | ArithOp<"*">) expression |
  expression !plus plusMin expression |
  expression !pow ArithOp<"^"> expression
}

plusMin { ArithOp<"+" | "-"> }

AssignmentExpression {
  VariableName !assign "=" expression
}



@tokens {
  space { @whitespace+ }
  ArithOp<expr> { expr }
  LineComment[isolate] { "//" ![\n]* }
  divide[@name=ArithOp] { "/" }
  @precedence { "/*", LineComment, divide }

  Number { @digit+ }
  identifierChar { @asciiLetter | $[_$\u{a1}-\u{10ffff}] }
  VariableName { identifierChar (identifierChar | @digit)* }
  @precedence { space, VariableName }
}
