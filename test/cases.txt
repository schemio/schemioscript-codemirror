# Simple expression

a1 +3

==>

Script(ExpressionStatement(BinaryExpression(VariableName,ArithOp,Number)))


# Simple expression2

(a1+(2-3))

==>

Script(ExpressionStatement(ParenthesizedExpression(BinaryExpression(VariableName,ArithOp,ParenthesizedExpression(BinaryExpression(Number,ArithOp,Number))))))


# Simple expression with whitespace

(a + b * 3 - w^2%3)

==>

Script(ExpressionStatement(ParenthesizedExpression(BinaryExpression(BinaryExpression(VariableName,ArithOp,BinaryExpression(VariableName,ArithOp,Number)),ArithOp,BinaryExpression(VariableName,ArithOp,BinaryExpression(Number,ArithOp,Number))))))

# Assigment expression

qwe = x* 3 +4

==>

Script(ExpressionStatement(AssignmentExpression(VariableName,BinaryExpression(BinaryExpression(VariableName,ArithOp,Number),ArithOp,Number))))


# Local variable assigment

local q = 34

==>

Script(VariableDeclaration(local,AssignmentExpression(VariableName,Number)))


# Logic expression

a || b && !c && x

==>

Script(ExpressionStatement(BinaryExpression(VariableName,LogicOp,BinaryExpression(BinaryExpression(VariableName,LogicOp,BinaryExpression(PostfixExpression(LogicOp,VariableName))),LogicOp,VariableName))))


# Semicolon statements

local n = 4; n = n + 1; n = n * 3;

==>

Script(VariableDeclaration(local,AssignmentExpression(VariableName,Number)),ExpressionStatement(AssignmentExpression(VariableName,BinaryExpression(VariableName,ArithOp,Number))),ExpressionStatement(AssignmentExpression(VariableName,BinaryExpression(VariableName,ArithOp,Number))))


# Multi-line statements

local a = 3

local b = a + 4
local z = 23

==>

Script(VariableDeclaration(local,AssignmentExpression(VariableName,Number)),VariableDeclaration(local,AssignmentExpression(VariableName,BinaryExpression(VariableName,ArithOp,Number))),VariableDeclaration(local,AssignmentExpression(VariableName,Number)))


# Strings

local name = "John " + "Conor"
"test"


==>

Script(VariableDeclaration(local,AssignmentExpression(VariableName,BinaryExpression(String,ArithOp,String))),ExpressionStatement(String))


# Template strings

local name = `${myName} Conor (${age+3})`


==>

Script(VariableDeclaration(local,AssignmentExpression(VariableName,TemplateString(Interpolation(InterpolationStart,VariableName,InterpolationEnd),Interpolation(InterpolationStart,BinaryExpression(VariableName,ArithOp,Number),InterpolationEnd)))))


# Block comment

local a = 3
/*
local b = a + 4
*/
local z = 23 + /* "qwe" */ 5

==>

Script(VariableDeclaration(local,AssignmentExpression(VariableName,Number)),BlockComment,VariableDeclaration(local,AssignmentExpression(VariableName,BinaryExpression(Number,ArithOp,BlockComment,Number))))


# For loop

for(local i = 0; i < 4; i++) {
    j--
    z +=5
}

==>

Script(ForStatement(for,ForSpec(VariableDeclaration(local,AssignmentExpression(VariableName,Number)),BinaryExpression(VariableName,CompareOp,Number),Increment(VariableName)),Block("{",ExpressionStatement(Decrement(VariableName)),ExpressionStatement(IncrementByExpression(VariableName,ExpressionStatement(Number))),"}")))